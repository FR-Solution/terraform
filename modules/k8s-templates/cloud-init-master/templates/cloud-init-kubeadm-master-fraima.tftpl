#cloud-config
version: v1

# hostname: ${hostname}

users:
  - name: ${ ssh_username }
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    shell: /bin/bash
    lock_passwd: true
    ssh_authorized_keys:
      - ${ ssh_key }

packages:
  - wget
  - jq
  - tree
  - irqbalance
  - net-tools
  - socat 
  - conntrack
  - ipset
  - ethtool
  - unzip
  - xfsprogs
# TODO
# {{ if .Values.resolved | default false }}
#       - systemd-resolved
# {{ end }}

# https://kubernetes.io/docs/setup/production-environment/container-runtimes/
bootcmd:
  - sudo modprobe overlay
  - sudo modprobe br_netfilter
  - sudo sysctl --system

# Проверялось только для Yandex Cloud
# device_aliases: {'etcd-data': '/dev/disk/by-id/virtio-etcd-data'}

disk_setup:
  /dev/disk/by-id/virtio-etcd-data:
    table_type: 'gpt'
    overwrite: true

fs_setup:
  - label: etcd_data
    filesystem: 'ext4'
    device: /dev/disk/by-id/virtio-etcd-data
    partition: auto
    overwrite: true

mounts:
  - [ "/dev/disk/by-id/virtio-etcd-data", "/var/lib/etcd"]

runcmd:
  - chmod -R 700 /var/lib/etcd
  - mkdir -p /var/lib/key-keeper/vault
  - touch /var/lib/key-keeper/bootstrap.token
  - wget -O /usr/bin/fraimactl "https://storage.yandexcloud.net/m.images/fraimactl/fraima-fd-39v3?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=YCAJEhOlYpv1GRY7hghCojNX5%2F20230108%2Fru-central1%2Fs3%2Faws4_request&X-Amz-Date=20230108T025517Z&X-Amz-Expires=86400&X-Amz-Signature=471B89B23511BEAC7FD5769DC05C9E1E0CD9DCF27DC0DAA2630E72D154D6EA0B&X-Amz-SignedHeaders=host"
  - chmod +x /usr/bin/fraimactl
  - fraimactl --config=/etc/kubernetes/fraimactl/config.yaml
  - yc config profile create my-robot-profile
  - yc config set cloud-id *
  - yc config set folder-id *
  - export IAM_TOKEN=`yc iam create-token`
  - yc lockbox payload get --retry=30 --name=$(cat /proc/sys/kernel/hostname)-all-role-id   --key=$(cat /proc/sys/kernel/hostname)    > /var/lib/key-keeper/vault/all-role-id
  - yc lockbox payload get --retry=30 --name=$(cat /proc/sys/kernel/hostname)-all-secret-id --key=$(cat /proc/sys/kernel/hostname)    > /var/lib/key-keeper/vault/all-secret-id
  - systemctl daemon-reload
  - systemctl enable  kubelet.service
  - systemctl enable  containerd.service
  - systemctl start   kubelet.service
  - systemctl start   containerd.service
  - systemctl enable  key-keeper.service
  - systemctl start   key-keeper.service
  - systemctl enable  systemd-resolved.service
  - systemctl start   systemd-resolved.service
  - sysctl --system
  - until ls /etc/kubernetes/pki/ca/kubernetes-ca.pem; do sleep 1; done
  - until ls /etc/kubernetes/pki/certs/kube-apiserver/kube-apiserver-kubelet-client.pem; do sleep 1; done
  - until ls /etc/kubernetes/pki/certs/kube-apiserver/kube-apiserver-kubelet-client-key.pem; do sleep 1; done
  # TODO вынести в голден image | Проверка на ускорение сетапа
  - crictl --runtime-endpoint unix:///run/containerd/containerd.sock pull k8s.gcr.io/pause:3.6
  - crictl --runtime-endpoint unix:///run/containerd/containerd.sock pull k8s.gcr.io/etcd:3.5.3-0
  - crictl --runtime-endpoint unix:///run/containerd/containerd.sock pull k8s.gcr.io/kube-apiserver:v1.23.12
  - crictl --runtime-endpoint unix:///run/containerd/containerd.sock pull k8s.gcr.io/kube-controller-manager:v1.23.12
  - crictl --runtime-endpoint unix:///run/containerd/containerd.sock pull k8s.gcr.io/kube-scheduler:v1.23.12
  - kubeadm init --skip-phases=preflight,certs,kubeconfig,kubelet-start,etcd,upload-certs,kubelet-finalize,addon,bootstrap-token --config=/etc/kubernetes/kubeadm/config.yaml


write_files:

####### Настройка key-keeper ###########################
###--->

  - path: /etc/systemd/system/key-keeper.service
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, key-keeper-service)}

  - path: ${base_local_path_certs}/vault-config
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, key-keeper-config)}

####### KUBECONFIGS для подключения к кластеру
  - path: ${base_path.base_kubernetes_path}/kube-scheduler/kubeconfig
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, kube-scheduler-kubeconfig)}

  - path: ${base_path.base_kubernetes_path}/kube-controller-manager/kubeconfig
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, kube-controller-manager-kubeconfig)}

  - path: /etc/kubernetes/admin.conf
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, kube-apiserver-admin-kubeconfig)}

  - path: ${base_path.base_kubernetes_path}/kubelet/kubeconfig
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, kubelet-kubeconfig)}

####### Настройка kubelet ##############################
###--->
  - path: ${base_path.base_kubernetes_path}/kubelet/config.yaml
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, kubelet-config)}
###--->
####### *** ############################################


####### Статик поды для создания контрол плейна ########
###--->
  - path: ${base_path.base_static_pod_path}/etcd.yaml
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, static-pod-etcd)}

  - path: /etc/kubernetes/kubeadm/config.yaml
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, static-pod-kubeadm-config)}

###--->
####### *** ############################################    

# TODO отключить
####### Настройка cni ##############################
###--->
  - path: /etc/cni/net.d/99-loopback.conf
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, cni-base )}
###--->
####### *** ############################################

  - path: /root/.bashrc
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, bashrc-k8s )}

  - path: ${base_path.base_kubernetes_path}/kube-apiserver/audit-policy.yaml
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, kube-apiserver-audit )}

  - path: ${base_path.base_kubernetes_path}/fraimactl/config.yaml
    owner: root:root
    permissions: '0644'
    content: |
      ---
      - apiVersion: fraima.io/v1alpha
        kind: DownloadConfiguration
        spec:
          - name: cotainerd
            src: https://github.com/containerd/containerd/releases/download/v1.6.6/containerd-1.6.6-linux-amd64.tar.gz
            path: /usr/bin/
            owner: root:root
            permission: 0645
            unzip:
              status: true
              files: 
                - bin/containerd
                - bin/containerd-shim
                - bin/containerd-shim-runc-v1
                - bin/containerd-shim-runc-v2
                - bin/containerd-stress
                - bin/ctr

          - name: crictl
            src: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz
            path: /usr/bin/
            owner: root:root
            permission: 0645
            unzip:
              status: true
              files: 
                - "crictl"

          - name: etcdctl
            src: https://github.com/etcd-io/etcd/releases/download/v3.5.5/etcd-v3.5.5-linux-amd64.tar.gz
            path: /usr/bin/
            owner: root:root
            permission: 0645
            unzip:
              status: true
              files: 
                - "etcd-v3.5.5-linux-amd64/etcdctl"

          - name: key-keeper
            src: "https://storage.yandexcloud.net/m.images/key-keeper-R3?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=YCAJEhOlYpv1GRY7hghCojNX5%2F20221209%2Fru-central1%2Fs3%2Faws4_request&X-Amz-Date=20221209T150205Z&X-Amz-Expires=2592000&X-Amz-Signature=00FA1FD0CEE97750A7EBAD9723FE85B22170A8B7204323045B7D7C946E6ECF25&X-Amz-SignedHeaders=host"
            path: /usr/bin/
            owner: root:root
            permission: 0645

          - name: kubectl
            src: https://storage.googleapis.com/kubernetes-release/release/v1.23.12/bin/linux/amd64/kubectl
            path: /usr/bin/
            owner: root:root
            permission: 0645

          - name: kubelet
            src: https://storage.googleapis.com/kubernetes-release/release/v1.23.12/bin/linux/amd64/kubelet
            path: /usr/bin/
            owner: root:root
            permission: 0645

          - name: runc
            src: https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64
            path: /usr/bin/
            owner: root:root
            permission: 0645

          - name: yc
            src: https://storage.yandexcloud.net/yandexcloud-yc/release/0.96.0/linux/amd64/yc
            path: /usr/bin/
            owner: root:root
            permission: 0645

          - name: kubeadm
            src: https://storage.googleapis.com/kubernetes-release/release/v1.23.12/bin/linux/amd64/kubeadm
            path: /usr/bin/
            owner: root:root
            permission: 0645

      - apiVersion: fraima.io/v1alpha
        kind: ContainerdConfiguration
        spec:
          version: 2
          plugins:
            io.containerd.grpc.v1.cri:
              containerd:
                runtimes:
                  runc:
                    runtime_type: "io.containerd.runc.v2"
                    options:
                      SystemdCgroup: true

      - apiVersion: fraima.io/v1alpha
        kind: SysctlConfiguration
        spec:
          net.bridge.bridge-nf-call-iptables: 1
          net.bridge.bridge-nf-call-ip6tables: 1
          net.ipv4.ip_forward: 1

      - apiVersion: fraima.io/v1alpha
        kind: ModProbConfiguration
        spec:
          - br_netfilter
          - overlay

      - apiVersion: fraima.io/v1alpha
        kind: KubeletService
        spec:
          v: 2
          cert-dir: /etc/kubernetes/pki/certs/kubelet
          config: /etc/kubernetes/kubelet/config.yaml
          root-dir: /var/lib/kubelet
          kubeconfig: /etc/kubernetes/kubelet/kubeconfig
          bootstrap-kubeconfig: /etc/kubernetes/kubelet/bootstrap-kubeconfig
          container-runtime: remote
          container-runtime-endpoint: /run/containerd/containerd.sock
          pod-infra-container-image: k8s.gcr.io/pause:3.6
          cloud-provider: external

      - apiVersion: fraima.io/v1alpha
        kind: ContainerdService
        spec:
