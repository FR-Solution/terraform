apiVersion: v1
stringData:
  serviceAccountJSON: |
    {{ .Values.cloud_secret | toJson | indent 4 }}
  folderID: {{ .Values.folder_id }}
  userData: |-
    #cloud-config
    version: v1
    users:
      - name: dkot
        sudo: ALL=(ALL) NOPASSWD:ALL
        groups: users, admin
        shell: /bin/bash
        lock_passwd: true
        ssh_authorized_keys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDBKp0G8Vlyi9XgxoL9xA20sY+Vc4szJ5PnP3BpAyaThtEIPtz/6w8DYy1qMGR5lq2MtjHKo0ghApCEM78rZf8PMR/EFW5hOeZzgiHZZVOUIThDwNAk9XQHKG+6OOS5+gpv+VLB3DTXxlPJsGdiI3/SBTmMfUCDZVR6LA94Uh5tgNypPqRRIv65tW0KbGjsYnMQxKFvO9lMHeFtJm1bAsb/+dbm1MafWYXg3yEGr6pyiHgaiwYgx2sKtIVqkg8IYNxLXzjIyS4kwB/WCkv3CEEIDL8KIi+HGnfv2tFzvtjwLgz2rtG73tVLzvjuplwG24Fx5vgCcTnWfFvAWiG5r8+IaHZ9ZvO9TOeAlOAWjB3ieHjA5ZS3R9J3WOAlfAQCA5jz6i2tFxAtIPBdWL0ZzYKUVLR561qd1AY5v9akqhquVIZqsJMzaLdCg0eoLNNdKgdQLXJohMPlqR96lR+mbym7UI/Fn7FvURibRgb781Z86ALfeYVHLYidVkrmhuuHzuU= dk@dobry-kot-system
    
    package_reboot_if_required: true
    packages:
      - wget
      - jq
      - tree
      - irqbalance
      - net-tools
      - socat 
      - conntrack
      - ipset
      - ethtool
      - unzip
      - xfsprogs
{{ if .Values.resolved | default false }}
      - systemd-resolved
{{ end }}

    bootcmd:
      - sudo modprobe overlay
      - sudo modprobe br_netfilter
      - sudo sysctl --system

    runcmd:
      - hostnamectl set-hostname  $(cat /proc/sys/kernel/hostname | awk -F '.' '{print $1}')
      - wget -O /usr/bin/kubectl       https://storage.googleapis.com/kubernetes-release/release/v1.23.12/bin/linux/amd64/kubectl
      - wget -O /usr/bin/kubelet       https://storage.googleapis.com/kubernetes-release/release/v1.23.12/bin/linux/amd64/kubelet
      - wget -O /usr/bin/runc          https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64
      - wget -O /tmp/containerd.tar.gz https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz
      - wget -O /tmp/crictl.tar.gz     https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz
      - chmod +x /usr/bin/kubelet 
      - chmod +x /usr/bin/kubectl 
      - chmod +x /usr/bin/runc
      - mkdir -p /tmp/containerd
      - tar -C "/tmp/containerd"  -xvf /tmp/containerd.tar.gz
      - tar -C "/usr/bin"         -xvf /tmp/crictl.tar.gz
      - cp /tmp/containerd/bin/*   /usr/bin/
      - systemctl daemon-reload
      - systemctl enable  kubelet.service
      - systemctl enable  containerd.service
      - systemctl start   kubelet.service
      - systemctl start   containerd.service 
      - systemctl enable  systemd-resolved.service
      - systemctl start   systemd-resolved.service
      - sysctl --system

    write_files:

      - path: /etc/kubernetes/kubelet/bootstrap-kubeconfig
        owner: root:root
        permissions: '0644'
        content: |
          ---
          apiVersion: v1
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: https://{{ .Values.k8s_api_server_fqdn }}:{{ .Values.k8s_api_server_port }}
            name: bootstrap
          contexts:
          - context:
              cluster: bootstrap
              user: kubelet-bootstrap
            name: bootstrap
          current-context: bootstrap
          kind: Config
          preferences: {}
          users:
          - name: kubelet-bootstrap
            user:
              token: <<BOOTSTRAP_TOKEN>>

      - path: /etc/systemd/system/kubelet.service
        owner: root:root
        permissions: '0644'
        content: |
          [Unit]
          Description=kubelet: The Kubernetes Node Agent
          Documentation=https://kubernetes.io/docs/home/
          Wants=network-online.target
          After=network-online.target containerd.service

          [Service]
          ExecStart=/usr/bin/kubelet \
            --cert-dir=/etc/kubernetes/pki/certs/kubelet \
            --config=/etc/kubernetes/kubelet/config.yaml \
            --root-dir=/var/lib/kubelet \
            --v=2 \
            --kubeconfig=/etc/kubernetes/kubelet/kubeconfig \
            --bootstrap-kubeconfig=/etc/kubernetes/kubelet/bootstrap-kubeconfig \
            --container-runtime=remote \
            --container-runtime-endpoint=/run/containerd/containerd.sock \
            --pod-infra-container-image=k8s.gcr.io/pause:3.6 \
            --cloud-provider=external
          Restart=always
          StartLimitInterval=0
          RestartSec=10
          AmbientCapabilities=CAP_SYS_RAWIO
          
          [Install]
          WantedBy=multi-user.target

      - path: /etc/kubernetes/kubelet/config.yaml
        owner: root:root
        permissions: '0644'
        content: |
          ---
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          registerNode: true
          authentication:
            anonymous:
              enabled: false
            webhook:
              cacheTTL: 0s
              enabled: true
            x509:
              clientCAFile: "/etc/kubernetes/pki/ca/kubernetes-ca.pem"
          authorization:
            mode: Webhook
            webhook:
              cacheAuthorizedTTL: 0s
              cacheUnauthorizedTTL: 0s
          cgroupDriver: systemd
          clusterDNS:
            - "29.64.0.10"
          clusterDomain: cluster.local
          cpuManagerReconcilePeriod: 0s
          evictionPressureTransitionPeriod: 0s
          fileCheckFrequency: 0s
          healthzBindAddress: 127.0.0.1
          healthzPort: 10248
          httpCheckFrequency: 0s
          imageMinimumGCAge: 0s
          logging:
            flushFrequency: 0
            options:
              json:
                infoBufferSize: "0"
            verbosity: 0
          memorySwap: {}
          nodeStatusReportFrequency: 1s
          nodeStatusUpdateFrequency: 1s
          resolvConf: /run/systemd/resolve/resolv.conf
          rotateCertificates: false
          runtimeRequestTimeout: 0s
          serverTLSBootstrap: true
          shutdownGracePeriod: 15s
          shutdownGracePeriodCriticalPods: 5s
          staticPodPath: "/etc/kubernetes/manifests"
          streamingConnectionIdleTimeout: 0s
          syncFrequency: 0s
          volumeStatsAggPeriod: 0s
          containerLogMaxSize: 50Mi
          maxPods: 250
          kubeAPIQPS: 50
          kubeAPIBurst: 100
          podPidsLimit: 4096
          serializeImagePulls: false
          systemReserved:
            ephemeral-storage: 1Gi
          featureGates:
            RotateKubeletServerCertificate: true
            APIPriorityAndFairness: true
            DownwardAPIHugePages: true
            PodSecurity: true
            CSIMigrationAWS: false
            CSIMigrationAzureFile: false
            CSIMigrationGCE: false
            CSIMigrationvSphere: false
          rotateCertificates: false
          serverTLSBootstrap: true
          tlsMinVersion: VersionTLS12
          tlsCipherSuites:
            - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
            - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
            - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
            - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          allowedUnsafeSysctls:
            - "net.core.somaxconn"
          evictionSoft: 
            memory.available: 3Gi 
            nodefs.available: 25%
            nodefs.inodesFree: 15%
            imagefs.available: 30%
            imagefs.inodesFree: 25%
          evictionSoftGracePeriod:  
            memory.available: 2m30s
            nodefs.available: 2m30s
            nodefs.inodesFree: 2m30s
            imagefs.available: 2m30s
            imagefs.inodesFree: 2m30s
          evictionHard:
            memory.available: 2Gi
            nodefs.available: 20%
            nodefs.inodesFree: 10%
            imagefs.available: 25%
            imagefs.inodesFree: 15%
          evictionPressureTransitionPeriod: 5s 
          imageMinimumGCAge: 12h 
          imageGCHighThresholdPercent: 55
          imageGCLowThresholdPercent: 50

      - path: /etc/systemd/system/containerd.service
        owner: root:root
        permissions: '0644'
        content: |
          [Unit]
          Description=containerd container runtime
          Documentation=https://containerd.io
          After=network.target
          
          [Service]
          ExecStartPre=/sbin/modprobe overlay
          ExecStart=/usr/bin/containerd --config=/etc/kubernetes/containerd/config.toml
          Restart=always
          RestartSec=5
          Delegate=yes
          KillMode=process
          OOMScoreAdjust=-999
          LimitNOFILE=1048576
          LimitNPROC=infinity
          LimitCORE=infinity
          
          [Install]
          WantedBy=multi-user.target

      - path: /etc/kubernetes/manifests
        owner: root:root
        permissions: '0644'

      - path: /etc/kubernetes/containerd/config.toml
        owner: root:root
        permissions: '0644'
        content: |
          disabled_plugins = []

          version = 2
          [plugins]
            [plugins."io.containerd.grpc.v1.cri"]
            [plugins."io.containerd.grpc.v1.cri".containerd]
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
                  [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                    runtime_type = "io.containerd.runc.v2"
                    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                      SystemdCgroup = true

      - path: /etc/sysctl.d/99-network.conf
        owner: root:root
        permissions: '0644'
        content: |
          net.bridge.bridge-nf-call-iptables=1
          net.bridge.bridge-nf-call-ip6tables=1
          net.ipv4.ip_forward=1

      - path: /etc/modules-load.d/k8s.conf
        owner: root:root
        permissions: '0644'
        content: |
          overlay
          br_netfilter

      - path: /etc/kubernetes/pki/ca/kubernetes-ca.pem
        owner: root:root
        permissions: '0644'
        content: |
          -----BEGIN CERTIFICATE-----
          MIIEVzCCAj+gAwIBAgIUPLrkt9mHfTQftNmh9RnuHqNVIBIwDQYJKoZIhvcNAQEL
          BQAwHzELMAkGA1UECBMCQ0ExEDAOBgNVBAMTB1Jvb3QgQ0EwHhcNMjIxMjIxMTgx
          NjI5WhcNMzMwMjI2MTgxNjU5WjBHMQswCQYDVQQIEwJDQTETMBEGA1UEChMKS3Vi
          ZXJuZXRlczEjMCEGA1UEAxMaS3ViZXJuZXRlcyBJbnRlcm1lZGlhdGUgQ0EwggEi
          MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCsLXWFjUD8CrnoIuWhYKp2YPyg
          U97dxSlqeW8xR677aR1qrH8vXnMMusd7Dw40RubuSPDzzD6f+GflSXGmfrv/Dhra
          0zLl1lK62V5LNROwTZcx7F/YxNhFulF55ieFCR1nqMFUjb//bQZ3gMFGKqHj4OA4
          yb2dKCTw9MmKjzgPnaqtcfI2uMixh/5bueQVmSRDSDCUBWp6Dg3+Tx7GgQwJCCrs
          au0b6Lhm0e3b+62zMzzMWpbv8XqhHNBbeAAWAq9XvmkPSDA1Oyc48I0QKkP5dDnZ
          uLc+t4ikILpIJgBD4DTBVwIUJkIo+jZ3ZiweInHdYBxrBa+LoKsHQHjWVS0/AgMB
          AAGjYzBhMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
          BBTKC34Joj96RyJuWqVkLQGFemVljzAfBgNVHSMEGDAWgBSBqSsnGPlRoEmUz2Lw
          kxmxDBtQ/TANBgkqhkiG9w0BAQsFAAOCAgEAb/pdclTARr4NnHWciXQsDsOwaNNw
          ZwtLGMWOL5HZQR6wxYzJ1gw/FqY2JXjqeUKAXErnkZHdzf1bh7dho1pjACFhy6l/
          d04QR04t9tfaXdDwRqoHjnRn6aF4UvHqwEZ8NF0lxCumgysOYReDX16t6oWwRk6J
          ATGL/3F4EfaTUSBzUJ/DbJG/cNXhihKNEIw4QXOX8CRRYdu/hK4b/RRPJHZpGGae
          nfIXtmvPH+NqumRPbYyIbBXXanCumm8rnq5JeSFvwY8V9pmmlw+SaryrFPekFWdQ
          zZ5p6KeL23fVnW7wR5yQi/uaewUUvWAQ9rnmrnDi4+1nMS1xGmHl2rK3FOYgzI5t
          vx7EzW+PR4InZ9ATwAShdqLZoEcckzSqKR67605BEykSq9ii36Yv/rPtlUSw+bDx
          IlDWjT+ddGpsxaKCWumc7CeMTA/v3NVVVqvEZTLMgG85oVgLIvTOe7dmRqQrAi3U
          1y11D8p/bD5miZN8fKeH1sUDNq4JwqSwOI10mYCxwOHTj5+MKbmYosxWiWYqkVh9
          6GGn2t2IKb3NaqpFopEIaLG0BeW5JbLUMbCyAsBkdVtsHQrNiqshRjWdvcU4x6Dd
          PTSUvpah2QARTQ7EwYH6yn6Wn5efc3hmUrQStLu0hJfz+dIWiwD0O3bPN1TxRRuS
          9gxujSippbX4aQE=
          -----END CERTIFICATE-----
kind: Secret
metadata:
  name: treska-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook-weight": "1"
type: Opaque
