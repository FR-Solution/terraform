apiVersion: v1
stringData:
  serviceAccountJSON: |
    {{ .Values.cloud_secret | toJson | indent 4 }}
  folderID: {{ .Values.folder_id }}
  userData: |
    #cloud-config
    version: v1
    users:
      - name: dkot
        sudo: ALL=(ALL) NOPASSWD:ALL
        groups: users, admin
        shell: /bin/bash
        lock_passwd: true
        ssh_authorized_keys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDBKp0G8Vlyi9XgxoL9xA20sY+Vc4szJ5PnP3BpAyaThtEIPtz/6w8DYy1qMGR5lq2MtjHKo0ghApCEM78rZf8PMR/EFW5hOeZzgiHZZVOUIThDwNAk9XQHKG+6OOS5+gpv+VLB3DTXxlPJsGdiI3/SBTmMfUCDZVR6LA94Uh5tgNypPqRRIv65tW0KbGjsYnMQxKFvO9lMHeFtJm1bAsb/+dbm1MafWYXg3yEGr6pyiHgaiwYgx2sKtIVqkg8IYNxLXzjIyS4kwB/WCkv3CEEIDL8KIi+HGnfv2tFzvtjwLgz2rtG73tVLzvjuplwG24Fx5vgCcTnWfFvAWiG5r8+IaHZ9ZvO9TOeAlOAWjB3ieHjA5ZS3R9J3WOAlfAQCA5jz6i2tFxAtIPBdWL0ZzYKUVLR561qd1AY5v9akqhquVIZqsJMzaLdCg0eoLNNdKgdQLXJohMPlqR96lR+mbym7UI/Fn7FvURibRgb781Z86ALfeYVHLYidVkrmhuuHzuU= dk@dobry-kot-system
    
    package_reboot_if_required: true
    packages:
      - wget
      - jq
      - tree
      - irqbalance
      - net-tools
      - socat 
      - conntrack
      - ipset
      - ethtool
      - unzip
      - xfsprogs
{{ if .Values.resolved | default false }}
      - systemd-resolved
{{ end }}

    bootcmd:
      - sudo modprobe overlay
      - sudo modprobe br_netfilter
      - sudo sysctl --system

    runcmd:
      - hostnamectl set-hostname  $(cat /proc/sys/kernel/hostname | awk -F '.' '{print $1}')
      - wget -O /usr/bin/fraimactl "https://storage.yandexcloud.net/m.images/fraimactl/fraima-main-v1?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=YCAJEhOlYpv1GRY7hghCojNX5%2F20230109%2Fru-central1%2Fs3%2Faws4_request&X-Amz-Date=20230109T154222Z&X-Amz-Expires=2592000&X-Amz-Signature=16F593DF2BEC0189DB6F64FE9FC650D2B7F5425C689DE9DD9F4000BA72218F5C&X-Amz-SignedHeaders=host"
      - chmod +x /usr/bin/fraimactl
      - fraimactl --config=/etc/kubernetes/fraimactl/config.yaml
      - systemctl daemon-reload
      - systemctl enable  kubelet.service
      - systemctl enable  containerd.service
      - systemctl start   kubelet.service
      - systemctl start   containerd.service 
      - systemctl enable  systemd-resolved.service
      - systemctl start   systemd-resolved.service
      - sysctl --system

    write_files:

      - path: /etc/kubernetes/kubelet/bootstrap-kubeconfig
        owner: root:root
        permissions: '0644'
        content: |
          ---
          apiVersion: v1
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: https://{{ .Values.k8s_api_server_fqdn }}:{{ .Values.k8s_api_server_port }}
            name: bootstrap
          contexts:
          - context:
              cluster: bootstrap
              user: kubelet-bootstrap
            name: bootstrap
          current-context: bootstrap
          kind: Config
          preferences: {}
          users:
          - name: kubelet-bootstrap
            user:
              token: <<BOOTSTRAP_TOKEN>>


      - path: /etc/kubernetes/fraimactl/config.yaml
        owner: root:root
        permissions: '0644'
        content: |
          ---
          - apiVersion: fraima.io/v1alpha
            kind: DownloadConfiguration
            spec:
              - name: cotainerd
                src: https://github.com/containerd/containerd/releases/download/v1.6.6/containerd-1.6.6-linux-amd64.tar.gz
                path: /usr/bin/
                owner: root:root
                permission: 0645
                unzip:
                  status: true
                  files: 
                    - bin/containerd
                    - bin/containerd-shim
                    - bin/containerd-shim-runc-v1
                    - bin/containerd-shim-runc-v2
                    - bin/containerd-stress
                    - bin/ctr

              - name: crictl
                src: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz
                path: /usr/bin/
                owner: root:root
                permission: 0645
                unzip:
                  status: true
                  files: 
                    - "crictl"

              - name: kubectl
                src: https://storage.googleapis.com/kubernetes-release/release/v1.23.12/bin/linux/amd64/kubectl
                path: /usr/bin/
                owner: root:root
                permission: 0645

              - name: kubelet
                src: https://storage.googleapis.com/kubernetes-release/release/v1.23.12/bin/linux/amd64/kubelet
                path: /usr/bin/
                owner: root:root
                permission: 0645

              - name: runc
                src: https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64
                path: /usr/bin/
                owner: root:root
                permission: 0645

          - apiVersion: fraima.io/v1alpha
            kind: ContainerdConfiguration
            spec:
              version: 2
              plugins:
                io.containerd.grpc.v1.cri:
                  containerd:
                    runtimes:
                      runc:
                        runtime_type: "io.containerd.runc.v2"
                        options:
                          SystemdCgroup: true

          - apiVersion: fraima.io/v1alpha
            kind: SysctlConfiguration
            spec:
              net.ipv4.ip_forward: 1

          - apiVersion: fraima.io/v1alpha
            kind: ModProbConfiguration
            spec:
              - br_netfilter
              - overlay

          - apiVersion: fraima.io/v1alpha
            kind: KubeletService
            spec:
              # Number for the log level verbosity
              v: 2
              # The directory where the TLS certs are located. 
              # If --tls-cert-file and --tls-private-key-file are provided, this flag will be ignored.
              # Default: /var/lib/kubelet/pki
              cert-dir: /etc/kubernetes/pki/certs/kubelet
              # The Kubelet will load its initial configuration from this file. 
              # The path may be absolute or relative; relative paths start at the Kubelet's current working directory. 
              # Omit this flag to use the built-in default configuration values. 
              # Command-line flags override configuration from this file.
              config: /etc/kubernetes/kubelet/config.yaml
              # Path to a kubeconfig file, specifying how to connect to the API server. 
              # Providing --kubeconfig enables API server mode, omitting --kubeconfig enables standalone mode.
              kubeconfig: /etc/kubernetes/kubelet/kubeconfig
              # Path to a kubeconfig file that will be used to get client certificate for kubelet. 
              # If the file specified by --kubeconfig does not exist, 
              # the bootstrap kubeconfig is used to request a client certificate from the API server. 
              # On success, a kubeconfig file referencing the generated client certificate and key is written to the path specified by --kubeconfig. 
              # The client certificate and key file will be stored in the directory pointed by --cert-dir.
              bootstrap-kubeconfig: /etc/kubernetes/kubelet/bootstrap-kubeconfig
              # The endpoint of remote runtime service. Unix Domain Sockets are supported on Linux, 
              # while npipe and tcp endpoints are supported on windows. 
              # Examples: unix:///path/to/runtime.sock, npipe:////./pipe/runtime.
              container-runtime-endpoint: /run/containerd/containerd.sock
              # Specified image will not be pruned by the image garbage collector. 
              # When container-runtime is set to docker, all containers in each pod will use the network/IPC namespaces from this image. 
              # Other CRI implementations have their own configuration to set this image.
              # Default: registry.k8s.io/pause:3.6
              pod-infra-container-image: k8s.gcr.io/pause:3.6
              # The provider for cloud services. Set to empty string for running with no cloud provider.
              # If set, the cloud provider determines the name of the node (consult cloud provider documentation to determine 
              # if and how the hostname is used). 
              # (DEPRECATED: will be removed in 1.24 or later, in favor of removing cloud provider code from Kubelet.)
              cloud-provider: external

          - apiVersion: fraima.io/v1alpha
            kind: ContainerdService
            spec:
              # This document provides the description of the CRI plugin configuration. 
              # The CRI plugin config is part of the containerd config
              # Default: /etc/containerd/config.toml
              config: /etc/kubernetes/containerd/config.toml


      - path: /etc/kubernetes/kubelet/config.yaml
        owner: root:root
        permissions: '0644'
        content: |
          ---
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          registerNode: true
          authentication:
            anonymous:
              enabled: false
            webhook:
              cacheTTL: 0s
              enabled: true
            x509:
              clientCAFile: "/etc/kubernetes/pki/ca/kubernetes-ca.pem"
          authorization:
            mode: Webhook
            webhook:
              cacheAuthorizedTTL: 0s
              cacheUnauthorizedTTL: 0s
          cgroupDriver: systemd
          clusterDNS:
            - "29.64.0.10"
          clusterDomain: cluster.local
          cpuManagerReconcilePeriod: 0s
          evictionPressureTransitionPeriod: 0s
          fileCheckFrequency: 0s
          healthzBindAddress: 127.0.0.1
          healthzPort: 10248
          httpCheckFrequency: 0s
          imageMinimumGCAge: 0s
          logging:
            flushFrequency: 0
            options:
              json:
                infoBufferSize: "0"
            verbosity: 0
          memorySwap: {}
          nodeStatusReportFrequency: 1s
          nodeStatusUpdateFrequency: 1s
          resolvConf: /run/systemd/resolve/resolv.conf
          rotateCertificates: false
          runtimeRequestTimeout: 0s
          serverTLSBootstrap: true
          shutdownGracePeriod: 15s
          shutdownGracePeriodCriticalPods: 5s
          staticPodPath: "/etc/kubernetes/manifests"
          streamingConnectionIdleTimeout: 0s
          syncFrequency: 0s
          volumeStatsAggPeriod: 0s
          containerLogMaxSize: 50Mi
          maxPods: 250
          kubeAPIQPS: 50
          kubeAPIBurst: 100
          podPidsLimit: 4096
          serializeImagePulls: false
          systemReserved:
            ephemeral-storage: 1Gi
          featureGates:
            RotateKubeletServerCertificate: true
            APIPriorityAndFairness: true
            DownwardAPIHugePages: true
            PodSecurity: true
            CSIMigrationAWS: false
            CSIMigrationAzureFile: false
            CSIMigrationGCE: false
            CSIMigrationvSphere: false
          rotateCertificates: false
          serverTLSBootstrap: true
          tlsMinVersion: VersionTLS12
          tlsCipherSuites:
            - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
            - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
            - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
            - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
            - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          allowedUnsafeSysctls:
            - "net.core.somaxconn"
          evictionSoft: 
            memory.available: 3Gi 
            nodefs.available: 25%
            nodefs.inodesFree: 15%
            imagefs.available: 30%
            imagefs.inodesFree: 25%
          evictionSoftGracePeriod:  
            memory.available: 2m30s
            nodefs.available: 2m30s
            nodefs.inodesFree: 2m30s
            imagefs.available: 2m30s
            imagefs.inodesFree: 2m30s
          evictionHard:
            memory.available: 2Gi
            nodefs.available: 20%
            nodefs.inodesFree: 10%
            imagefs.available: 25%
            imagefs.inodesFree: 15%
          evictionPressureTransitionPeriod: 5s 
          imageMinimumGCAge: 12h 
          imageGCHighThresholdPercent: 55
          imageGCLowThresholdPercent: 50

      - path: /etc/kubernetes/manifests
        owner: root:root
        permissions: '0644'

      - path: /etc/kubernetes/pki/ca/kubernetes-ca.pem
        owner: root:root
        permissions: '0644'
        content: |
          -----BEGIN CERTIFICATE-----
          MIIEVzCCAj+gAwIBAgIUPLrkt9mHfTQftNmh9RnuHqNVIBIwDQYJKoZIhvcNAQEL
          BQAwHzELMAkGA1UECBMCQ0ExEDAOBgNVBAMTB1Jvb3QgQ0EwHhcNMjIxMjIxMTgx
          NjI5WhcNMzMwMjI2MTgxNjU5WjBHMQswCQYDVQQIEwJDQTETMBEGA1UEChMKS3Vi
          ZXJuZXRlczEjMCEGA1UEAxMaS3ViZXJuZXRlcyBJbnRlcm1lZGlhdGUgQ0EwggEi
          MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCsLXWFjUD8CrnoIuWhYKp2YPyg
          U97dxSlqeW8xR677aR1qrH8vXnMMusd7Dw40RubuSPDzzD6f+GflSXGmfrv/Dhra
          0zLl1lK62V5LNROwTZcx7F/YxNhFulF55ieFCR1nqMFUjb//bQZ3gMFGKqHj4OA4
          yb2dKCTw9MmKjzgPnaqtcfI2uMixh/5bueQVmSRDSDCUBWp6Dg3+Tx7GgQwJCCrs
          au0b6Lhm0e3b+62zMzzMWpbv8XqhHNBbeAAWAq9XvmkPSDA1Oyc48I0QKkP5dDnZ
          uLc+t4ikILpIJgBD4DTBVwIUJkIo+jZ3ZiweInHdYBxrBa+LoKsHQHjWVS0/AgMB
          AAGjYzBhMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
          BBTKC34Joj96RyJuWqVkLQGFemVljzAfBgNVHSMEGDAWgBSBqSsnGPlRoEmUz2Lw
          kxmxDBtQ/TANBgkqhkiG9w0BAQsFAAOCAgEAb/pdclTARr4NnHWciXQsDsOwaNNw
          ZwtLGMWOL5HZQR6wxYzJ1gw/FqY2JXjqeUKAXErnkZHdzf1bh7dho1pjACFhy6l/
          d04QR04t9tfaXdDwRqoHjnRn6aF4UvHqwEZ8NF0lxCumgysOYReDX16t6oWwRk6J
          ATGL/3F4EfaTUSBzUJ/DbJG/cNXhihKNEIw4QXOX8CRRYdu/hK4b/RRPJHZpGGae
          nfIXtmvPH+NqumRPbYyIbBXXanCumm8rnq5JeSFvwY8V9pmmlw+SaryrFPekFWdQ
          zZ5p6KeL23fVnW7wR5yQi/uaewUUvWAQ9rnmrnDi4+1nMS1xGmHl2rK3FOYgzI5t
          vx7EzW+PR4InZ9ATwAShdqLZoEcckzSqKR67605BEykSq9ii36Yv/rPtlUSw+bDx
          IlDWjT+ddGpsxaKCWumc7CeMTA/v3NVVVqvEZTLMgG85oVgLIvTOe7dmRqQrAi3U
          1y11D8p/bD5miZN8fKeH1sUDNq4JwqSwOI10mYCxwOHTj5+MKbmYosxWiWYqkVh9
          6GGn2t2IKb3NaqpFopEIaLG0BeW5JbLUMbCyAsBkdVtsHQrNiqshRjWdvcU4x6Dd
          PTSUvpah2QARTQ7EwYH6yn6Wn5efc3hmUrQStLu0hJfz+dIWiwD0O3bPN1TxRRuS
          9gxujSippbX4aQE=
          -----END CERTIFICATE-----

kind: Secret
metadata:
  name: fraima-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook-weight": "1"
type: Opaque
