apiVersion: apps/v1
kind: Deployment
metadata:
 
  name: machine-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: machine-controller-manager
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: machine-controller-manager
    spec:
      containers:
      - args:
        - --namespace={{ .Release.Namespace }}
        - --cloud-provider="yandex"
        - --machine-max-evict-retries=30
        - --machine-safety-orphan-vms-period=30s
        - --failed-machine-deletion-ratio=0.2
        - --bootstrap-token-auth-extra-groups=system:bootstrappers:worker,system:bootstrappers:ingress
        - --address=127.0.0.1
        - --port=10258
        - --machine-drain-delay=1m
        - -v=2
        command:
        - /machine-controller-manager
        env:
        - name: LEADER_ELECTION_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: registry.deckhouse.io/deckhouse/ce:87b3ecf8da768179557564256c6c5bb2b419392982ccd60372599d4b-1663920068490
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: controller
        resources:
          requests:
            ephemeral-storage: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - --secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):8443
        - --client-ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - --v=2
        - --logtostderr=true
        - --stale-cache-interval=1h30m
        - --livez-path=/livez
        env:
          - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: KUBE_RBAC_PROXY_CONFIG
            value: |
              excludePaths:
              - /healthz
              upstreams:
              - upstream: http://127.0.0.1:10258/
                path: /
                authorization:
                  resourceAttributes:
                    namespace: {{ .Release.Namespace }}
                    apiGroup: apps
                    apiVersion: v1
                    resource: deployments
                    subresource: prometheus-metrics
                    name: machine-controller-manager
        image: registry.deckhouse.io/deckhouse/ce:10cef0b5e1d8f6fa3740e7ffcf2d23c4b2cc47b12b3b95a0f7080e8c-1667395856686
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          hostPort: 8443
          name: https-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            ephemeral-storage: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: Default
      hostNetwork: true
      # imagePullSecrets:
      # - name: deckhouse-registry
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccount: machine-controller-manager
      serviceAccountName: machine-controller-manager
      terminationGracePeriodSeconds: 30
      tolerations:
        - key: node-role.kubernetes.io/master
        - key: node-role.kubernetes.io/control-plane
        - key: dedicated.deckhouse.io
          operator: Exists
        - key: dedicated
          operator: Exists
        - key: DeletionCandidateOfClusterAutoscaler
        - key: ToBeDeletedByClusterAutoscaler
        - key: node.kubernetes.io/not-ready
        - key: node.kubernetes.io/out-of-disk
        - key: node.kubernetes.io/memory-pressure
        - key: node.kubernetes.io/disk-pressure
        - key: drbd.linbit.com/lost-quorum
        - key: drbd.linbit.com/force-io-error
        - key: drbd.linbit.com/ignore-fail-over

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: machine-controller-manager
  namespace: {{ .Release.Namespace }}


---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: machine-controller-manager
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - machine.sapcloud.io
  resources:
  - awsmachineclasses
  - azuremachineclasses
  - gcpmachineclasses
  - openstackmachineclasses
  - alicloudmachineclasses
  - packetmachineclasses
  - vspheremachineclasses
  - yandexmachineclasses
  - machinedeployments
  - machines
  - machinesets
  - awsmachineclasses/status
  - azuremachineclasses/status
  - gcpmachineclasses/status
  - openstackmachineclasses/status
  - alicloudmachineclasses/status
  - packetmachineclasses/status
  - vspheremachineclasses/status
  - yandexmachineclasses/status
  - machinedeployments/status
  - machines/status
  - machinesets/status
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - patch
  - update
  - list
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
- apiGroups:
  - ""
  resourceNames:
  - machine-controller-manager
  resources:
  - endpoints
  verbs:
  - get
  - update
  - patch
  - delete
  - watch


---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: machine-controller-manager
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: machine-controller-manager
subjects:
- kind: ServiceAccount
  name: machine-controller-manager
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fraima:machine-controller-manager
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - endpoints
  - replicationcontrollers
  - pods
  - persistentvolumes
  - persistentvolumeclaims
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - delete
  - deletecollection
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/eviction
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - deletecollection
- apiGroups:
  - extensions
  - apps
  resources:
  - replicasets
  - statefulsets
  - daemonsets
  - deployments
  verbs:
  - get
  - list
  - watch


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fraima:machine-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fraima:machine-controller-manager
subjects:
- kind: ServiceAccount
  name: machine-controller-manager
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fraima:machine-controller-manager
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fraima:machine-controller-manager
subjects:
- kind: ServiceAccount
  name: machine-controller-manager
  namespace: {{ .Release.Namespace }}


---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: fraima:machine-controller-manager
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - delete
