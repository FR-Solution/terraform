---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
  name: {{ include "cluster-csi-controller.name" . }}
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ include "cluster-csi-controller.name" . }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ include "cluster-csi-controller.name" . }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: topology.kubernetes.io/zone
                labelSelector:
                  matchLabels:
                    app: {{ include "cluster-csi-controller.name" . }}

      containers:
      {{- with .Values.csiProvisioner }}
      - name: csi-provisioner
        args:
          - --csi-address=$(ADDRESS)
          - --leader-election-namespace=$(NAMESPACE)
          - --enable-capacity
          - --feature-gates=Topology=true
          - --strict-topology
          - --leader-election=true
          {{- with .extraArgs }}
            {{- range $k, $v := . }}
          - --{{- $k }}={{ $v -}}
            {{end}}
          {{- end }}

        env:
        - name: ADDRESS
          value: "{{ $.Values.csiPath }}/{{ $.Values.csiSockName }}"

        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name

        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace

        image: {{ .image }}
        imagePullPolicy: IfNotPresent
        
        {{- with .resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

        volumeMounts:
          - name: socket-dir
            mountPath: {{ $.Values.csiPath }}
      {{- end }}

      {{- with .Values.csiAttacher }}
      - name: csi-attacher
        args:
          - --csi-address=$(ADDRESS)
          - --leader-election=true
          - --leader-election-namespace=$(NAMESPACE)
          {{- with .extraArgs }}
            {{- range $k, $v := . }}
          - --{{- $k }}={{ $v -}}
            {{end}}
          {{- end }}

        env:
        - name: ADDRESS
          value: "{{ $.Values.csiPath }}/{{ $.Values.csiSockName }}"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace

        image: {{ .image }}
        imagePullPolicy: IfNotPresent
        
        {{- with .resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

        volumeMounts:
          - name: socket-dir
            mountPath: {{ $.Values.csiPath }}

      {{- end }}

      {{- with .Values.csiResizer }}
      - name: csi-resizer
        args:
          - --csi-address=$(ADDRESS)
          - --leader-election=true
          - --leader-election-namespace=$(NAMESPACE)
          {{- with .extraArgs }}
            {{- range $k, $v := . }}
          - --{{- $k }}={{ $v -}}
            {{end}}
          {{- end }}

        env:
        - name: ADDRESS
          value: "{{ $.Values.csiPath }}/{{ $.Values.csiSockName }}"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace

        image: {{ .image }}
        imagePullPolicy: IfNotPresent
        
        {{- with .resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

        volumeMounts:
          - name: socket-dir
            mountPath: {{ $.Values.csiPath }}

      {{- end }}

      {{- with .Values.csiSnapshotter }}
      - name: csi-snapshotter
        args:
        - --csi-address=$(ADDRESS)
        - --leader-election=true
        - --leader-election-namespace=$(NAMESPACE)
        {{- with .extraArgs }}
          {{- range $k, $v := . }}
        - --{{- $k }}={{ $v -}}
          {{end}}
        {{- end }}

        env:
          - name: ADDRESS
            value: "{{ $.Values.csiPath }}/{{ $.Values.csiSockName }}"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace

        image: {{ .image }}
        imagePullPolicy: IfNotPresent
        
        {{- with .resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

        volumeMounts:
          - name: socket-dir
            mountPath: {{ $.Values.csiPath }}

      {{- end }}

      {{- with .Values.csiLivenessprobe }}
      - name: csi-livenessprobe
        args:
          - --csi-address=$(ADDRESS)
          - --health-port={{ .ports.controller.healthPort }}
          {{- with .extraArgs }}
            {{- range $k, $v := . }}
          - --{{- $k }}={{ $v -}}
            {{end}}
          {{- end }}

        env:
          - name: ADDRESS
            value: "{{ $.Values.csiPath }}/{{ $.Values.csiSockName }}"

        image: {{ .image }}
        imagePullPolicy: IfNotPresent

        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: {{ .ports.controller.healthPort }}
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: {{ .ports.controller.healthPort }}
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

        {{- with .resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

        volumeMounts:
          - name: socket-dir
            mountPath: {{ $.Values.csiPath }}
      {{- end }}

      {{- with .Values.csiController }}
      - name: csi-controller
        args:
          - --address=$(POD_IP):{{ .ports.addressPort }}
          - --endpoint=unix://$(ADDRESS)
          - --folder-id=$(YANDEX_FOLDER_ID)
        env:
          - name: ADDRESS
            value: "{{ $.Values.csiPath }}/{{ $.Values.csiSockName }}"

          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP

          - name: YANDEX_AUTH_KEYS
            valueFrom:
              secretKeyRef:
                name: {{ include "cluster-csi-controller.name" $ }}
                key: serviceAccountJSON

          - name: YANDEX_FOLDER_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "cluster-csi-controller.name" $ }}
                key: folderID

        image: {{ .image }}
        imagePullPolicy: IfNotPresent

        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: {{ $.Values.csiLivenessprobe.ports.controller.healthPort }}
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

        {{- with .resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

        volumeMounts:
          - mountPath: {{ $.Values.csiPath }}
            name: socket-dir
      {{- end }}

      dnsPolicy: Default
      hostNetwork: true
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler

      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534

      serviceAccount: {{ include "cluster-csi-controller.name" . }}
      serviceAccountName: {{ include "cluster-csi-controller.name" . }}
      terminationGracePeriodSeconds: 30

      tolerations:
        - operator: Exists

      volumes:
        - emptyDir: {}
          name: socket-dir